{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs26 \cf0 import \{ DynamoDBClient \} from "@aws-sdk/client-dynamodb";\
import \{\
  DynamoDBDocumentClient,\
  ScanCommand,\
  PutCommand,\
  GetCommand,\
  DeleteCommand\
\} from "@aws-sdk/lib-dynamodb";\
\
const client = new DynamoDBClient(\{\});\
\
const dynamo = DynamoDBDocumentClient.from(client);\
\
\
export const handler = async (event, context) => \{\
  let body;\
  let statusCode = 200;\
  const headers = \{\
    "Content-Type": "application/json",\
  \};\
	\
  const tableName = 'recipes';\
  try \{\
    body = await dynamo.send(\
          new ScanCommand(\{ TableName: tableName \})\
        );\
        body = body.Items;\
  \} catch (err) \{\
    statusCode = 400;\
    body = err.message;\
  \} finally \{\
    body = JSON.stringify(body);\
  \}\
\
  return \{\
    statusCode,\
    body,\
    headers,\
  \};\
\};}